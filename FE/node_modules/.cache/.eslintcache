[{"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\index.js":"1","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\reportWebVitals.js":"2","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\App.js":"3","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\api\\authapi.js":"4","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Register\\Register.js":"5","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\Home\\Home.js":"6","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\Profile\\Profile.js":"7","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Login\\Login.js":"8","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\BoardCustomer\\BoardCustomer.js":"9","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\BoardAdmin\\BoardAdmin.js":"10","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\BoardExpert\\BoardExpert.js":"11","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\api\\userapi.js":"12","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\api\\authheader.js":"13","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Sliders\\Sliders.js":"14","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\SliderDetail\\SliderDetail.js":"15","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Posts\\PostList.js":"16","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Posts\\Sidebar.js":"17"},{"size":671,"mtime":1695402638434,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1695056969113,"results":"20","hashOfConfig":"19"},{"size":4469,"mtime":1695402638420,"results":"21","hashOfConfig":"19"},{"size":2440,"mtime":1695402638421,"results":"22","hashOfConfig":"19"},{"size":4264,"mtime":1695056969113,"results":"23","hashOfConfig":"19"},{"size":718,"mtime":1695098429143,"results":"24","hashOfConfig":"19"},{"size":1016,"mtime":1695056969113,"results":"25","hashOfConfig":"19"},{"size":5088,"mtime":1695402638434,"results":"26","hashOfConfig":"19"},{"size":878,"mtime":1695402638433,"results":"27","hashOfConfig":"19"},{"size":869,"mtime":1695402638427,"results":"28","hashOfConfig":"19"},{"size":872,"mtime":1695402638434,"results":"29","hashOfConfig":"19"},{"size":1407,"mtime":1695402638421,"results":"30","hashOfConfig":"19"},{"size":259,"mtime":1695098429141,"results":"31","hashOfConfig":"19"},{"size":5524,"mtime":1695402638436,"results":"32","hashOfConfig":"19"},{"size":3696,"mtime":1695402638435,"results":"33","hashOfConfig":"19"},{"size":2291,"mtime":1695402638435,"results":"34","hashOfConfig":"19"},{"size":3376,"mtime":1695402638435,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1226t81",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\index.js",[],[],"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\reportWebVitals.js",[],[],"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\App.js",["95"],[],"import React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport authapi from \"./api/authapi\";\nimport Login from \"./pages/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport Register from \"./pages/Register/Register\";\nimport Profile from \"./components/Profile/Profile\";\nimport BoardCustomer from \"./components/BoardCustomer/BoardCustomer\";\nimport BoardAdmin from \"./components/BoardAdmin/BoardAdmin\";\nimport BoardExpert from \"./components/BoardExpert/BoardExpert\";\nimport SliderList from \"./pages/Sliders/Sliders\";\nimport SliderDetail from \"./pages/SliderDetail/SliderDetail\";\nimport PostList from \"./pages/Posts/PostList\";\n\nconst App = () => {\n    const [showExpertBoard, setShowExpertBoard] = useState(false);\n    const [showAdminBoard, setShowAdminBoard] = useState(false);\n    const [currentUser, setCurrentUser] = useState(undefined);\n\n    useEffect(() => {\n        const user = authapi.getCurrentUser();\n\n        if (user && user.role) {\n            setCurrentUser(user);\n            console.log(user);\n            setShowExpertBoard(user.role.includes(\"EXPERT\"));\n            setShowAdminBoard(user.role.includes(\"ADMIN\"));\n        }\n\n    }, []);\n\n    const logOut = () => {\n        authapi.logout();\n    };\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            Quizzi\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/sliders\"} className=\"nav-link\">\n                Sliders\n              </Link>\n            </li>\n              <li className=\"nav-item\">\n                  <Link to={\"/posts\"} className=\"nav-link\">\n                      Post\n                  </Link>\n              </li>\n            {setShowExpertBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/customer\"} className=\"nav-link\">\n                  Customer Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/expert\"} className=\"nav-link\">\n                  Expert Board\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.email}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/home\" element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/profile\" element={<Profile />} />\n            <Route path=\"/customer\" element={<BoardCustomer />} />\n            <Route path=\"/expert\" element={<BoardExpert />} />\n            <Route path=\"/admin\" element={<BoardAdmin />} />\n            <Route path=\"/sliders\" element={<SliderList />} />\n              <Route path=\"/posts\" element={<PostList />} />\n            <Route path=\"/sliders/edit/:sliderId\" element={<SliderDetail/>} />\n          </Routes>\n        </div>\n      </div>\n    );\n};\n\nexport default App;","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\api\\authapi.js",["96","97"],[],"\n/*\n\nFetch và Axios là hai cách khác nhau để thực hiện yêu cầu HTTP trong JavaScript.\nDưới đây là một số sự khác nhau chính giữa chúng:\n\nAPI và Cú pháp: Fetch là một API tiêu chuẩn của JavaScript và được tích hợp sẵn trong các trình duyệt\nhiện đại. Axios là một thư viện bên ngoài, bạn cần cài đặt nó thông qua npm hoặc yarn và sau đó import\nvào dự án.\n\nTrình duyệt hỗ trợ: Fetch được tích hợp trong các trình duyệt hiện đại, nhưng có một số sự khác biệt\ntrong việc hỗ trợ và cú pháp giữa các trình duyệt. Axios không bị giới hạn bởi các vấn đề tương thích\ntrình duyệt và hoạt động tương tự trên cả máy chủ và trình duyệt.\n\nSử dụng: Fetch được sử dụng thông qua API tiêu chuẩn fetch() và trả về một Promise. Axios cung cấp một\ngiao diện dễ sử dụng hơn và trả về một Promise nên có thể được sử dụng dễ dàng trong mã bất đồng bộ.\n\nXử lý lỗi: Axios cung cấp cách xử lý lỗi dễ dàng hơn bằng cách sử dụng .catch() trực tiếp trên\nPromise trả về. Fetch yêu cầu xử lý lỗi bằng cách kiểm tra trạng thái của phản hồi và ném một ngoại lệ.\n\nCấu hình mặc định: Axios cung cấp các cấu hình mặc định tốt hơn cho các yêu cầu HTTP như xử lý tự\nđộng dạng JSON và quản lý cookie. Fetch cần nhiều cấu hình hơn để thực hiện những tác vụ tương tự.\n\nHỗ trợ hủy: Axios hỗ trợ việc hủy yêu cầu HTTP, điều này rất hữu ích khi bạn muốn hủy một yêu cầu\nđang chờ khi người dùng thực hiện hành động khác. Fetch không hỗ trợ hủy yêu cầu một cách dễ dàng.\n */\nimport axios from \"axios\";\n// Địa chỉ API của máy chủ dùng để gọi các yêu cầu đăng ký\nconst API_URL = \"http://localhost:8080/api/test/\";\n\n//Hàm thực hiện đăng xuất người dùng\nconst logout = () => {\n    //Lấy thông tin người dùng từ localStorage sau đó xóa đi\n    localStorage.removeItem(\"token\");\n};\n\n// Hàm lấy thông tin người dùng hiện tại từ localStorage\nconst getCurrentUser = () => {\n    return localStorage.getItem(\"role\");\n};\n\n\nconst authapi = {\n    logout, getCurrentUser\n};\n\nexport default authapi;\n","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Register\\Register.js",[],[],"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\Home\\Home.js",[],[],"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\Profile\\Profile.js",[],[],"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Login\\Login.js",[],[],"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\BoardCustomer\\BoardCustomer.js",[],[],"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\BoardAdmin\\BoardAdmin.js",[],[],"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\components\\BoardExpert\\BoardExpert.js",[],[],"D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\api\\userapi.js",["98"],[],"import axios from \"axios\";\nimport authHeader from \"./authheader\";\nimport jwtDecode from \"jwt-decode\";\n\nconst API_URL = \"http://localhost:8080/api/test\";\nconst token = localStorage.getItem(\"token\");\n// console.log(token);\n// const decodedToken = jwtDecode(token, process.env.JWT_SECRECT);\n// console.log(decodedToken);\n// if (decodedToken.exp < new Date()) {\n//   console.log(\"token het han\");\n// }\nconst getPublishContent = () => {\n  return axios.get(API_URL + \"/all\");\n};\n\nconst getCustomerBoard = () => {\n  console.log(token);\n  const decodedToken = jwtDecode(token, process.env.JWT_SECRECT);\n  console.log(decodedToken);\n  return axios.get(API_URL + \"/customer\", {\n    headers: {\n      \"Content-Type\": \"application/json\", // Đặt Content-Type là application/json\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nconst getAdminBoard = () => {\n  return axios.get(API_URL + \"/admin\", {\n    headers: {\n      \"Content-Type\": \"application/json\", // Đặt Content-Type là application/json\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\nconst getExpertBoard = () => {\n  return axios.get(API_URL + \"/expert\", {\n    headers: {\n      \"Content-Type\": \"application/json\", // Đặt Content-Type là application/json\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nconst userapi = {\n  getPublishContent,\n  getAdminBoard,\n  getExpertBoard,\n  getCustomerBoard,\n};\n\nexport default userapi;\n","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\api\\authheader.js",["99","100","101"],[],"// Hàm xuất khẩu để tạo header xác thực cho yêu cầu HTTP\nexport default function authHeader() {\n    const email = localStorage.getItem(\"email\");\n    const role = localStorage.getItem(\"role\");\n    const token = localStorage.getItem(\"token\");\n}\n","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Sliders\\Sliders.js",["102","103","104","105","106","107"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst SliderList = () => {\r\n  const [sliders, setSliders] = useState([]);\r\n  const [filteredSliders, setFilteredSliders] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n\r\n  // Xử lí api\r\n  const api = \"http://localhost:8080/sliders\";\r\n\r\n  useEffect(() => {\r\n    fetch(api)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n\r\n      .then((dataJson) => {\r\n        const data = dataJson.map((item) => ({\r\n          sliderID: item.sliderID,\r\n          title: item.title,\r\n          image: item.image,\r\n          subjectID: item.subjectID,\r\n          subjectName: item.subject.subjectName,\r\n          subjectStatus: item.subject.status,\r\n          status: item.status,\r\n          note: item.note,\r\n        }));\r\n        return data;\r\n      })\r\n\r\n      .then((result) => {\r\n        const mockData = result;\r\n        setSliders(mockData);\r\n        setFilteredSliders(mockData);\r\n      });\r\n  }, []);\r\n\r\n  const sliderData = {};\r\n\r\n  // Filter sliders by search term and status\r\n  useEffect(() => {\r\n    const filtered = sliders.filter((slider) => {\r\n      const titleMatch = slider.title\r\n        .toLowerCase()\r\n        .includes(searchTerm.toLowerCase());\r\n\r\n      const subjectNameMatch = slider.subjectName\r\n        .toLowerCase()\r\n        .includes(searchTerm.toLowerCase());\r\n\r\n      const statusMatch =\r\n        statusFilter == \"all\" || slider.status == statusFilter;\r\n      return (titleMatch || subjectNameMatch) && statusMatch;\r\n    });\r\n    setFilteredSliders(filtered);\r\n  }, [sliders, searchTerm, statusFilter]);\r\n\r\n  // Handle slider actions (e.g., hide, show, edit)\r\n  const handleAction = (sliderId, action) => {\r\n    // Tìm slider theo sliderId\r\n    const updatedSliders = sliders.map((slider) => {\r\n      if (slider.sliderID === sliderId) {\r\n        // Cập nhật giá trị status thành 0 khi nhấp vào \"Hidden\"\r\n        slider.status = action === \"hide\" ? 0 : slider.status;\r\n      }\r\n\r\n      if (slider.sliderID === sliderId) {\r\n        // Cập nhật giá trị status thành 0 khi nhấp vào \"Hidden\"\r\n        slider.status = action === \"show\" ? 1 : slider.status;\r\n      }\r\n\r\n      return slider;\r\n    });\r\n\r\n    // Cập nhật state với slider đã được cập nhật\r\n    setSliders(updatedSliders);\r\n\r\n    // Gửi yêu cầu cập nhật đến máy chủ ở đây\r\n    // Đảm bảo bạn đã cài đặt endpoint phù hợp trên máy chủ để xử lý cập nhật\r\n\r\n    // Ví dụ sử dụng fetch để gửi yêu cầu PUT\r\n    const updateStatus = action === \"show\" ? 1 : 0;\r\n    console.log(updateStatus);\r\n\r\n    fetch(`http://localhost:8080/sliders/${sliderId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ status: updateStatus }),\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (!response.ok) {\r\n          throw new Error(console.error());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        // Xử lý phản hồi từ máy chủ (nếu cần)\r\n        console.log(\"Slider updated:\", data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating slider:\", error);\r\n        // Nếu có lỗi xảy ra trong quá trình gửi yêu cầu, bạn có thể khôi phục giá trị status\r\n        setSliders(sliders);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title or backlink\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <select onChange={(e) => setStatusFilter(e.target.value)}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"1\">Visible</option>\r\n          <option value=\"0\">Hidden</option>\r\n        </select>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Title</th>\r\n            <th>Image</th>\r\n            <th>Subject Name</th>\r\n            <th>Status</th>\r\n            <th>Note</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredSliders.map((slider) => (\r\n            <tr key={slider.sliderID}>\r\n              <td>{slider.sliderID}</td>\r\n              <td>{slider.title}</td>\r\n\r\n              <td>\r\n                <img src={slider.image} alt=\"image of the slider\"></img>\r\n              </td>\r\n              <td>{slider.subjectName}</td>\r\n              <td>{slider.status == 1 ? \"Active\" : \"Inactive\"}</td>\r\n              <td>{slider.note}</td>\r\n              <td>\r\n                {slider.status == 1 ? (\r\n                  <button onClick={() => handleAction(slider.sliderID, \"hide\")}>\r\n                    Hidden\r\n                  </button>\r\n                ) : (\r\n                  <button onClick={() => handleAction(slider.sliderID, \"show\")}>\r\n                    Show\r\n                  </button>\r\n                )}\r\n\r\n                <button>\r\n                  <Link to={`/sliders/edit/${slider.sliderID}`}>Edit</Link>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderList;\r\n","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\SliderDetail\\SliderDetail.js",["108"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst SliderDetail = () => {\r\n  const { sliderId } = useParams();\r\n  const [sliderData, setSliderData] = useState({});\r\n  const [editing, setEditing] = useState(false);\r\n  const [updatedTitle, setUpdatedTitle] = useState(\"\");\r\n  const [updatedImage, setUpdatedImage] = useState(\"\");\r\n  const [updatedNote, setUpdatedNote] = useState(\"\");\r\n  const [updatedStatus, setUpdatedStatus] = useState(0); // Sử dụng giá trị mặc định\r\n  const imageGet = \"\";\r\n  const navigate = useNavigate();\r\n  const baseURL = \"http://localhost:8081/\";\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8080/sliders/edit/${sliderId}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setSliderData(data);\r\n        setUpdatedTitle(data.title);\r\n        setUpdatedImage(data.image);\r\n\r\n        setUpdatedNote(data.note);\r\n        setUpdatedStatus(data.status);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching slider data:\", error);\r\n      });\r\n  }, [sliderId]);\r\n\r\n  const handleEditClick = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleSaveClick = () => {\r\n    // Tạo một đối tượng mới chứa thông tin đã cập nhật\r\n\r\n    const formData = {\r\n      image: updatedImage,\r\n      title: updatedTitle,\r\n      id: sliderId,\r\n      note: updatedNote,\r\n      status: updatedStatus,\r\n    };\r\n\r\n    // Gửi yêu cầu PUT với đối tượng updatedSliderData\r\n    fetch(`http://localhost:8080/sliders/edit/${sliderId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.data.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        navigate(\"/sliders\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating slider data:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Slider ID:\r\n        <input type=\"text\" value={sliderData.sliderID} readOnly />\r\n      </div>\r\n\r\n      <div>\r\n        Slider titile\r\n        <input\r\n          type=\"text\"\r\n          value={updatedTitle}\r\n          onChange={(e) => setUpdatedTitle(e.target.value)}\r\n          readOnly={!editing}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        Slider image\r\n        <img src={baseURL + updatedImage} alt=\"something\" />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          enctype=\"multipart/form-data\"\r\n          onChange={(e) => setUpdatedImage(e.target.files[0])}\r\n          readOnly={!editing}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        Slider note\r\n        <input\r\n          type=\"text\"\r\n          value={updatedNote}\r\n          onChange={(e) => setUpdatedNote(e.target.value)}\r\n          readOnly={!editing}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        Slider status:\r\n        <select\r\n          value={updatedStatus}\r\n          onChange={(e) => setUpdatedStatus(e.target.value)}\r\n          readOnly={!editing}\r\n        >\r\n          <option value=\"1\">Active</option>\r\n          <option value=\"0\">Inactive</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        {editing ? (\r\n          <button onClick={handleSaveClick}>Save</button>\r\n        ) : (\r\n          <button onClick={handleEditClick}>Edit</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderDetail;\r\n","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Posts\\PostList.js",["109","110"],[],"import React, { Component } from 'react';\nimport Sidebar from \"./Sidebar\";\nimport { format } from 'date-fns';\nimport './style.css'\nimport axios from 'axios';\n\nconst API_URL = \"http://localhost:8080/posts\";\nclass PostList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            posts: [],\n        };\n    }\n\n    componentDidMount() {\n        axios.get(API_URL)\n            .then((response) => {\n                this.setState({ posts: response.data });\n            })\n            .catch((error) => {\n                console.error('Error fetching data: ', error);\n            });\n    }\n\n    render() {\n        const { posts } = this.state;\n        return (\n            <section className=\"section posts-entry posts-entry-sm bg-light\">\n                <div className=\"container\">\n                    <h1 className=\"posts-entry-title\">Tiêu Đề Của Phần</h1>\n                    <div className=\"row\">\n                        <div className=\"col-md-9\">\n                            <div className=\"row\">\n                                {posts.map((post) => (\n                                    <div key={post.id} className=\"col-md-4\">\n                                        <div className=\"blog-entry\">\n                                            <a href=\"single.html\" className=\"img-link\">\n                                                <img src={post.image} alt=\"Image\" className=\"img-fluid\" />\n                                            </a>\n                                            <span className=\"date\">\n                        {format(new Date(post.dateCreate), 'dd-MM-yyyy')}\n                      </span>\n                                            <h2 className='post-title'><a href=\"single.html\">{post.title}</a></h2>\n                                            <p>{post.briefInfor}</p>\n                                            <p><a href=\"#\" className=\"read-more\">Continue Reading</a></p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Sidebar/>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default PostList;\n","D:\\SWP\\SWP391_SE1740_NJ_\\FE\\src\\pages\\Posts\\Sidebar.js",["111"],[],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport './style.css'\n\n\nconst API_URL = \"http://localhost:8080/posts\";\nclass Sidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: [], // Danh sách các danh mục sẽ được lấy từ Spring Boot\n            randomPosts: [], // Danh sách bài viết ngẫu nhiên\n        };\n    }\n\n\n    componentDidMount() {\n        axios.get(API_URL + '/cate') // Gọi API từ Spring Boot bằng Axios\n            .then(response => {\n                this.setState({ categories: response.data }); // Cập nhật state với danh sách danh mục từ API\n            })\n            .catch(error => {\n                console.error('Error fetching categories:', error);\n            });\n\n        axios.get(API_URL + '/randomPost')\n            .then(response => {\n                this.setState({ randomPosts: response.data }); // Cập nhật state với danh sách bài viết ngẫu nhiên từ API\n            })\n            .catch(error => {\n                console.error('Error fetching random posts:', error);\n            });\n    }\n    render() {\n        return (\n            <div className=\"col-md-3\">\n                <div className=\"category\">\n                    <h4>Danh mục</h4>\n                    {/* Ô tìm kiếm */}\n                    <div className=\"search-box\">\n                        <input type=\"text\" placeholder=\"Tìm kiếm...\" />\n                        <button type=\"button\">Tìm</button>\n                    </div>\n                    <h4>Thể loại</h4>\n                    <select className=\"form-control\">\n                        <option>Chọn danh mục</option>\n                        {this.state.categories.map((category) => (\n                            <option key={category.id} value={category.name}>\n                                {category.name}\n                            </option>\n                        ))}\n                    </select>\n                    <h4>Bài viết</h4>\n                    {/* Danh sách bài viết */}\n                    <ul className=\"list-group\">\n                        {this.state.randomPosts.map((post) => (\n                            <li key={post.postID} className=\"list-group-item\">\n                                <div className=\"row\">\n                                    <a href='#'>\n                                        <div className=\"col-md-4\">\n                                            <img\n                                                src={post.image} // Sử dụng đường dẫn hình ảnh từ dữ liệu bài viết\n                                                alt={post.title}\n                                                className=\"img-large\"\n                                            />\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <h6 className=\"\">{post.title}</h6>\n                                        </div>\n                                    </a>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                    {/* Select danh mục */}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n",{"ruleId":"112","severity":1,"message":"113","line":19,"column":12,"nodeType":"114","messageId":"115","endLine":19,"endColumn":27},{"ruleId":"112","severity":1,"message":"116","line":27,"column":8,"nodeType":"114","messageId":"115","endLine":27,"endColumn":13},{"ruleId":"112","severity":1,"message":"117","line":29,"column":7,"nodeType":"114","messageId":"115","endLine":29,"endColumn":14},{"ruleId":"112","severity":1,"message":"118","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":18},{"ruleId":"112","severity":1,"message":"119","line":3,"column":11,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"112","severity":1,"message":"120","line":4,"column":11,"nodeType":"114","messageId":"115","endLine":4,"endColumn":15},{"ruleId":"112","severity":1,"message":"121","line":5,"column":11,"nodeType":"114","messageId":"115","endLine":5,"endColumn":16},{"ruleId":"112","severity":1,"message":"122","line":42,"column":9,"nodeType":"114","messageId":"115","endLine":42,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":56,"column":22,"nodeType":"125","messageId":"126","endLine":56,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":56,"column":48,"nodeType":"125","messageId":"126","endLine":56,"endColumn":50},{"ruleId":"127","severity":1,"message":"128","line":148,"column":17,"nodeType":"129","endLine":148,"endColumn":67},{"ruleId":"123","severity":1,"message":"124","line":151,"column":34,"nodeType":"125","messageId":"126","endLine":151,"endColumn":36},{"ruleId":"123","severity":1,"message":"124","line":154,"column":32,"nodeType":"125","messageId":"126","endLine":154,"endColumn":34},{"ruleId":"112","severity":1,"message":"130","line":12,"column":9,"nodeType":"114","messageId":"115","endLine":12,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":40,"column":49,"nodeType":"129","endLine":40,"endColumn":107},{"ruleId":"131","severity":1,"message":"132","line":47,"column":48,"nodeType":"129","endLine":47,"endColumn":82},{"ruleId":"131","severity":1,"message":"132","line":59,"column":37,"nodeType":"129","endLine":59,"endColumn":49},"no-unused-vars","'showExpertBoard' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","'API_URL' is assigned a value but never used.","'authHeader' is defined but never used.","'email' is assigned a value but never used.","'role' is assigned a value but never used.","'token' is assigned a value but never used.","'sliderData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'imageGet' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]